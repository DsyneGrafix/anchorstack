// /api/stripe/create-checkout-session.ts
import { NextApiRequest, NextApiResponse } from 'next'
import Stripe from 'stripe'

const stripe = new Stripe(process.env.STRIPE_SECRET_KEY as string, {
  apiVersion: '2022-11-15',
})

const priceIds: Record<string, string> = {
  bronze: 'price_abc123',     // Replace with your real Stripe price ID
  silver: 'price_def456',
  gold: 'price_ghi789',
  platinum: 'price_xyz000',
}

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method !== 'POST') return res.status(405).end()

  const { tier } = req.body
  const priceId = priceIds[tier]
  if (!priceId) return res.status(400).json({ error: 'Invalid tier' })

  try {
    const session = await stripe.checkout.sessions.create({
      mode: 'subscription',
      payment_method_types: ['card'],
      line_items: [{ price: priceId, quantity: 1 }],
      success_url: `${req.headers.origin}/dashboard?status=success`,
      cancel_url: `${req.headers.origin}/vault?status=cancelled`,
    })
    res.status(200).json({ url: session.url })
  } catch (error) {
    console.error('[STRIPE_SESSION_ERROR]', error)
    res.status(500).json({ error: 'Internal server error' })
  }
}
